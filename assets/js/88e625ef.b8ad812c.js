"use strict";(self.webpackChunkephemeris_notes=self.webpackChunkephemeris_notes||[]).push([[1957],{2132:e=>{e.exports=JSON.parse('{"label":"GPU","permalink":"/EphemerisNotes/tags/gpu","allTagsPath":"/EphemerisNotes/tags","count":3,"items":[{"id":"ImplementationDetails/Rendering/CPULines","title":"CPU Line Rendering","description":"In part 1 we looked at how to take a buffer of positions and the render them on the GPU with all kinds of helpful features such as constant screen size, double precision and stencil support. But where do we get the positions to go in that buffer?","permalink":"/EphemerisNotes/ImplementationDetails/Rendering/CPULines"},{"id":"ImplementationDetails/Rendering/GPULines","title":"GPU Line Rendering","description":"Ephemeris needs to draw a lot of lines to show orbital paths. In fact most of the important information in the game is communicated entirely with lines and UI elements!","permalink":"/EphemerisNotes/ImplementationDetails/Rendering/GPULines"},{"id":"ImplementationDetails/Rendering/LineGridRendering","title":"Line Grid Renfering","description":"Ephemeris has an \\"infinite\\" grid which acts as a reference to help understand the position of things within 3D space. This reference plane should have lines as thin as possible (1 pixel) without suffering from aliasing at any angle or distance.","permalink":"/EphemerisNotes/ImplementationDetails/Rendering/LineGridRendering"}]}')}}]);