"use strict";(self.webpackChunkephemeris_notes=self.webpackChunkephemeris_notes||[]).push([[639],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),p=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=p(r),h=a,y=c["".concat(o,".").concat(h)]||c[h]||u[h]||i;return r?n.createElement(y,l(l({ref:t},m),{},{components:r})):n.createElement(y,l({ref:t},m))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var p=2;p<i;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},5531:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={title:"Networking Notes",tags:["TechnicalDetails","Multiplayer"]},l=void 0,s={unversionedId:"ImplementationDetails/Multiplayer/Networking",id:"ImplementationDetails/Multiplayer/Networking",title:"Networking Notes",description:'- All objects are on "rails" which can be sampled at points in time.',source:"@site/docs/ImplementationDetails/Multiplayer/Networking.md",sourceDirName:"ImplementationDetails/Multiplayer",slug:"/ImplementationDetails/Multiplayer/Networking",permalink:"/EphemerisNotes/ImplementationDetails/Multiplayer/Networking",draft:!1,editUrl:"https://github.com/martindevans/EphemerisNotes/tree/master/docs/ImplementationDetails/Multiplayer/Networking.md",tags:[{label:"TechnicalDetails",permalink:"/EphemerisNotes/tags/technical-details"},{label:"Multiplayer",permalink:"/EphemerisNotes/tags/multiplayer"}],version:"current",frontMatter:{title:"Networking Notes",tags:["TechnicalDetails","Multiplayer"]},sidebar:"tutorialSidebar",previous:{title:"Frameworks",permalink:"/EphemerisNotes/ImplementationDetails/Multiplayer/Frameworks"},next:{title:"Time Sync",permalink:"/EphemerisNotes/ImplementationDetails/Multiplayer/Time Sync"}},o={},p=[{value:"Planets/Moons",id:"planetsmoons",level:3},{value:"Ships/Missiles",id:"shipsmissiles",level:3}],m={toc:p};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'All objects are on "rails" which can be sampled at points in time.',(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Planets are on [","[Kepler]","] rails. They can be sampled at any point in time just by solving Keplers equation."),(0,a.kt)("li",{parentName:"ul"},"Ships/Missiles are N-Body-ish - they are pulled by everything that's on a Kepler rail but not by each other.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"These rails must be ",(0,a.kt)("a",{parentName:"li",href:"/EphemerisNotes/ImplementationDetails/Physics/Integration"},"integrated")," step by step."))))),(0,a.kt)("li",{parentName:"ul"},"Types of objects:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Planets/Moons (Kepler)"),(0,a.kt)("li",{parentName:"ul"},"Missiles (N-Body)"),(0,a.kt)("li",{parentName:"ul"},"Ships (N-Body)")))),(0,a.kt)("h3",{id:"planetsmoons"},"Planets/Moons"),(0,a.kt)("p",null,"Orbital elements are part of the scenario, initialised at the start of the game and sampled independently by every client every frame."),(0,a.kt)("h3",{id:"shipsmissiles"},"Ships/Missiles"),(0,a.kt)("p",null,"Each client calculates 2 rails:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"True rail. This is where the ship will actually be, taking into account all engine burns",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Only ever needs to be recalculated if an unexpected force happens (e.g. an impact)"),(0,a.kt)("li",{parentName:"ul"},"Sometimes must be cut back to a certain time, if an engine burn is added or removed from the schedule."))),(0,a.kt)("li",{parentName:"ul"},"Estimated rail. This is where the ship will be, simply based on extrapolating out from current position and velocity.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Needs to be recalculated if the position diverges too much."),(0,a.kt)("li",{parentName:"ul"},'Can just "copy the homework" of the true rail up until the first engine burn.')))),(0,a.kt)("p",null,"Both rails are sent over the network. Other clients ",(0,a.kt)("em",{parentName:"p"},"display")," the estimated rail, but sample from the true rail."))}u.isMDXComponent=!0}}]);